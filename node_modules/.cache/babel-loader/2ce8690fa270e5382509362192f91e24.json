{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/jagh/Documents/04_NucleusAI/05_web_samples_code/tryformik/src/index.js\";\n// import React from 'react';\n// import {Formik, Field, Form, FieldArray, ErrorMessage} from 'formik';\n//\n// // import * as Yup from 'yup';\n// // import { EdtitionState } from 'draf-js';\n// // import { RichEditorExample } from './RichEditor';\n// // import { Debug } fron '../Debug';\n//\n// //Basic Formik Demo\n// import { render } from \"react-dom\";\n// // import * as Yup from \"yup\";\n//\n//\n//\n// const initialValues = {\n//   friends: [\n//     {\n//       name: '',\n//       email: '',\n//     },\n//   ],\n// };\n//\n// const Invitation = () => (\n//   <div className=\"invitation\">\n//   <h1>Invite friends </h1>\n//   <Formik\n//     initialValues={initialValues}\n//     onSubmit={values => {\n//       setTimeout(() => {\n//         alert(JSON.stringify(values, null, 2));\n//       }, 500);\n//     }}\n//   >\n//     {() => <div>foo</div>}\n//   </Formik>\n//   </div>\n// );\n//\n//\n// // export default Invitation;\n//\n//\n// render(<Invitation />, document.getElementById(\"root\"));\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst App = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"app\",\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"Basic\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://github.com/jaredpalmer/formik\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      children: \"Formik\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), \" \", \"Demo\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: \"\"\n    },\n    onSubmit: async values => {\n      await new Promise(resolve => setTimeout(resolve, 500));\n      alert(JSON.stringify(values, null, 2));\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email().required(\"Required\")\n    }),\n    children: props => {\n      const {\n        values,\n        touched,\n        errors,\n        dirty,\n        isSubmitting,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        handleReset\n      } = props;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          style: {\n            display: \"block\"\n          },\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          placeholder: \"Enter your email\",\n          type: \"text\",\n          value: values.email,\n          onChange: handleChange,\n          onBlur: handleBlur,\n          className: errors.email && touched.email ? \"text-input error\" : \"text-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-feedback\",\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"outline\",\n          onClick: handleReset,\n          disabled: !dirty || isSubmitting,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 55,\n  columnNumber: 3\n}, this);\n\n_c = App;\nrender( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 133,\n  columnNumber: 8\n}, this), document.getElementById(\"root\"));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/jagh/Documents/04_NucleusAI/05_web_samples_code/tryformik/src/index.js"],"names":["React","render","Formik","Yup","App","email","values","Promise","resolve","setTimeout","alert","JSON","stringify","object","shape","string","required","props","touched","errors","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset","display","document","getElementById"],"mappings":"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","sourcesContent":["// import React from 'react';\n// import {Formik, Field, Form, FieldArray, ErrorMessage} from 'formik';\n//\n// // import * as Yup from 'yup';\n// // import { EdtitionState } from 'draf-js';\n// // import { RichEditorExample } from './RichEditor';\n// // import { Debug } fron '../Debug';\n//\n// //Basic Formik Demo\n// import { render } from \"react-dom\";\n// // import * as Yup from \"yup\";\n//\n//\n//\n// const initialValues = {\n//   friends: [\n//     {\n//       name: '',\n//       email: '',\n//     },\n//   ],\n// };\n//\n// const Invitation = () => (\n//   <div className=\"invitation\">\n//   <h1>Invite friends </h1>\n//   <Formik\n//     initialValues={initialValues}\n//     onSubmit={values => {\n//       setTimeout(() => {\n//         alert(JSON.stringify(values, null, 2));\n//       }, 500);\n//     }}\n//   >\n//     {() => <div>foo</div>}\n//   </Formik>\n//   </div>\n// );\n//\n//\n// // export default Invitation;\n//\n//\n// render(<Invitation />, document.getElementById(\"root\"));\n\n\n\n\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst App = () => (\n  <div className=\"app\">\n    <h1>\n      Basic{\" \"}\n      <a\n        href=\"https://github.com/jaredpalmer/formik\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Formik\n      </a>{\" \"}\n      Demo\n    </h1>\n\n    <Formik\n      initialValues={{ email: \"\" }}\n      onSubmit={async values => {\n        await new Promise(resolve => setTimeout(resolve, 500));\n        alert(JSON.stringify(values, null, 2));\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email()\n          .required(\"Required\")\n      })}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset\n        } = props;\n        return (\n          <form onSubmit={handleSubmit}>\n            <label htmlFor=\"email\" style={{ display: \"block\" }}>\n              Email\n            </label>\n            <input\n              id=\"email\"\n              placeholder=\"Enter your email\"\n              type=\"text\"\n              value={values.email}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              className={\n                errors.email && touched.email\n                  ? \"text-input error\"\n                  : \"text-input\"\n              }\n            />\n            {errors.email && touched.email && (\n              <div className=\"input-feedback\">{errors.email}</div>\n            )}\n\n            <button\n              type=\"button\"\n              className=\"outline\"\n              onClick={handleReset}\n              disabled={!dirty || isSubmitting}\n            >\n              Reset\n            </button>\n            <button type=\"submit\" disabled={isSubmitting}>\n              Submit\n            </button>\n          </form>\n        );\n      }}\n    </Formik>\n\n  </div>\n);\n\nrender(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}