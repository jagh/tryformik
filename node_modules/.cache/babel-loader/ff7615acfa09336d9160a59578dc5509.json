{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jagh/Documents/04_NucleusAI/05_web_samples_code/tryformik/src/index.js\",\n    _s = $RefreshSig$();\n\n// import React from 'react';\n// import { render } from 'react-dom';\n// import App from './App';\n//\n// render(<App />, document.body.appendChild(document.createElement('div')));\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Formik, Field, Form, ErrorMessage, useFormikContext } from 'formik';\n\nconst isRequired = message => value => !!value ? undefined : message;\n\nconst Example = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Pick a username\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      username: '',\n      email: ''\n    },\n    onSubmit: async values => {\n      await new Promise(r => setTimeout(r, 500));\n      alert(JSON.stringify(values, null, 2));\n    },\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"username\",\n          validate: isRequired('This field is required'),\n          type: \"text\",\n          placeholder: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          validate: isRequired('This field is required'),\n          type: \"text\",\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Playground, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 3\n}, this);\n\n_c = Example;\n\nconst Playground = () => {\n  _s();\n\n  const {\n    errors,\n    touched,\n    setFieldValue,\n    setFieldTouched,\n    validateField,\n    validateForm\n  } = useFormikContext();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), \" field actions\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          setFieldTouched('username', true, true);\n        },\n        children: \"setFieldTouched\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          setFieldValue('username', '', true);\n        },\n        children: \"setFieldValue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          validateField('username');\n        },\n        children: \"validateField\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Form actions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: validateForm,\n        children: \"validate form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Playground, \"w11B2+a893ojH0zBsmgFnI7EoH8=\", false, function () {\n  return [useFormikContext];\n});\n\n_c2 = Playground;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Example, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 104,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Example\");\n$RefreshReg$(_c2, \"Playground\");","map":{"version":3,"sources":["/home/jagh/Documents/04_NucleusAI/05_web_samples_code/tryformik/src/index.js"],"names":["React","ReactDOM","Formik","Field","Form","ErrorMessage","useFormikContext","isRequired","message","value","undefined","Example","username","email","values","Promise","r","setTimeout","alert","JSON","stringify","Playground","errors","touched","setFieldValue","setFieldTouched","validateField","validateForm","render","document","getElementById"],"mappings":"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","sourcesContent":["// import React from 'react';\n// import { render } from 'react-dom';\n// import App from './App';\n//\n// render(<App />, document.body.appendChild(document.createElement('div')));\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Formik, Field, Form, ErrorMessage, useFormikContext } from 'formik';\n\nconst isRequired = (message) => (value) => (!!value ? undefined : message);\n\nconst Example = () => (\n  <div>\n    <h1>Pick a username</h1>\n    <Formik\n      initialValues={{ username: '', email: '' }}\n      onSubmit={async (values) => {\n        await new Promise((r) => setTimeout(r, 500));\n        alert(JSON.stringify(values, null, 2));\n      }}\n    >\n      <Form>\n        <label htmlFor=\"username\">Username</label>\n        <div>\n          <Field\n            name=\"username\"\n            validate={isRequired('This field is required')}\n            type=\"text\"\n            placeholder=\"Username\"\n          />\n          <ErrorMessage name=\"username\" />\n        </div>\n        <br />\n        <div>\n          <Field\n            name=\"email\"\n            validate={isRequired('This field is required')}\n            type=\"text\"\n            placeholder=\"Email\"\n          />\n          <ErrorMessage name=\"email\" />\n        </div>\n        <button type=\"submit\">Submit</button>\n        <hr />\n        <Playground />\n      </Form>\n    </Formik>\n  </div>\n);\n\nconst Playground = () => {\n  const {\n    errors,\n    touched,\n    setFieldValue,\n    setFieldTouched,\n    validateField,\n    validateForm,\n  } = useFormikContext();\n  return (\n    <>\n      <div>\n        <div>\n          <code>username</code> field actions\n        </div>\n        <button\n          type=\"button\"\n          onClick={() => {\n            setFieldTouched('username', true, true);\n          }}\n        >\n          setFieldTouched\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            setFieldValue('username', '', true);\n          }}\n        >\n          setFieldValue\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            validateField('username');\n          }}\n        >\n          validateField\n        </button>\n        <br />\n      </div>\n      <br />\n      <div>\n        <div>Form actions</div>\n        <button type=\"button\" onClick={validateForm}>\n          validate form\n        </button>\n      </div>\n    </>\n  );\n};\n\nReactDOM.render(<Example />, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}