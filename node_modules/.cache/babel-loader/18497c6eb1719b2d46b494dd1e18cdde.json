{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/jagh/Documents/04_NucleusAI/05_web_samples_code/tryformik/src/index.js\";\n// import React from \"react\";\n// import ReactDOM from 'react-dom';\n// import {Formik, Field, Form, FieldArray, ErrorMessage} from 'formik';\n//\n// // import * as Yup from 'yup';\n// // import { EdtitionState } from 'draf-js';\n// // import { RichEditorExample } from './RichEditor';\n// // import { Debug } fron '../Debug';\n//\n//\n// const initialValues = {\n//   friends: [\n//     {\n//       name: '',\n//       email: '',\n//     },\n//   ],\n// };\n//\n// const Invitation = () => (\n//   <div className=\"invitation\">\n//   <h1>Invite friends </h1>\n//   <Formik\n//     initialValues={initialValues}\n//     onSubmit={values => {\n//       setTimeout(() => {\n//         alert(JSON.stringify(values, null, 2));\n//       }, 500);\n//     }}\n//   >\n//     {() => <div>foo</div>}\n//   </Formik>\n//   </div>\n// );\n//\n//\n// export default Invitation;\n//\n//\n// ReactDOM.render(\n//   <Invitation />,\n//   document.getElementById('root')\n// );\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport { Text, View, StyleSheet, TextInput, Alert } from 'react'; // import * as Constants from 'expo-constants';\n\nimport * as Constants from './constants';\nimport { Button } from 'react';\nimport { Formik, Field, Form, FieldArray, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.emailInput = null;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(View, {\n      style: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        style: styles.title,\n        children: \"Formik x React Native\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          name: '',\n          email: ''\n        },\n        validationSchema: Yup.object({\n          name: Yup.string().required('Required'),\n          email: Yup.string().email('Invalid Email').required('Required')\n        }),\n        onSubmit: (values, formikActions) => {\n          setTimeout(() => {\n            Alert.alert(JSON.stringify(values)); // Important: Make sure to setSubmitting to false so our loading indicator\n            // goes away.\n\n            formikActions.setSubmitting(false);\n          }, 500);\n        },\n        children: props => /*#__PURE__*/_jsxDEV(View, {\n          children: [/*#__PURE__*/_jsxDEV(TextInput, {\n            onChangeText: props.handleChange('name'),\n            onBlur: props.handleBlur('name'),\n            value: props.values.name,\n            autoFocus: true,\n            placeholder: \"Your Name\",\n            style: styles.input,\n            onSubmitEditing: () => {\n              // on certain forms, it is nice to move the user's focus\n              // to the next input when they press enter.\n              this.emailInput.focus();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 14\n          }, this), props.touched.name && props.errors.name ? /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.error,\n            children: props.errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this) : null, /*#__PURE__*/_jsxDEV(TextInput, {\n            onChangeText: props.handleChange('email'),\n            onBlur: props.handleBlur('email'),\n            value: props.values.email,\n            placeholder: \"Email Address\",\n            style: styles.input,\n            ref: el => this.emailInput = el\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), props.touched.email && props.errors.email ? /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.error,\n            children: props.errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n            onPress: props.handleSubmit,\n            color: \"black\",\n            mode: \"contained\",\n            loading: props.isSubmitting,\n            disabled: props.isSubmitting,\n            style: {\n              marginTop: 16\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onPress: props.handleReset,\n            color: \"black\",\n            mode: \"outlined\",\n            disabled: props.isSubmitting,\n            style: {\n              marginTop: 16\n            },\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: Constants.statusBarHeight + 200,\n    backgroundColor: '#ecf0f1',\n    padding: 8\n  },\n  title: {\n    margin: 24,\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  error: {\n    margin: 8,\n    fontSize: 14,\n    color: 'red',\n    fontWeight: 'bold'\n  },\n  input: {\n    height: 50,\n    paddingHorizontal: 8,\n    width: '100%',\n    borderColor: '#ddd',\n    borderWidth: 1,\n    backgroundColor: '#fff'\n  }\n});\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 168,\n  columnNumber: 3\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/home/jagh/Documents/04_NucleusAI/05_web_samples_code/tryformik/src/index.js"],"names":["React","ReactDOM","Text","View","StyleSheet","TextInput","Alert","Constants","Button","Formik","Field","Form","FieldArray","ErrorMessage","Yup","App","Component","emailInput","render","styles","container","title","name","email","object","string","required","values","formikActions","setTimeout","alert","JSON","stringify","setSubmitting","props","handleChange","handleBlur","input","focus","touched","errors","error","el","handleSubmit","isSubmitting","marginTop","handleReset","create","flex","paddingTop","statusBarHeight","backgroundColor","padding","margin","fontSize","fontWeight","textAlign","color","height","paddingHorizontal","width","borderColor","borderWidth","document","getElementById"],"mappings":"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","sourcesContent":["// import React from \"react\";\n// import ReactDOM from 'react-dom';\n// import {Formik, Field, Form, FieldArray, ErrorMessage} from 'formik';\n//\n// // import * as Yup from 'yup';\n// // import { EdtitionState } from 'draf-js';\n// // import { RichEditorExample } from './RichEditor';\n// // import { Debug } fron '../Debug';\n//\n//\n// const initialValues = {\n//   friends: [\n//     {\n//       name: '',\n//       email: '',\n//     },\n//   ],\n// };\n//\n// const Invitation = () => (\n//   <div className=\"invitation\">\n//   <h1>Invite friends </h1>\n//   <Formik\n//     initialValues={initialValues}\n//     onSubmit={values => {\n//       setTimeout(() => {\n//         alert(JSON.stringify(values, null, 2));\n//       }, 500);\n//     }}\n//   >\n//     {() => <div>foo</div>}\n//   </Formik>\n//   </div>\n// );\n//\n//\n// export default Invitation;\n//\n//\n// ReactDOM.render(\n//   <Invitation />,\n//   document.getElementById('root')\n// );\n\n\n\n\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport { Text, View, StyleSheet, TextInput, Alert } from 'react';\n// import * as Constants from 'expo-constants';\nimport * as Constants from './constants'\nimport { Button } from 'react';\nimport {Formik, Field, Form, FieldArray, ErrorMessage} from 'formik';\nimport * as Yup from 'yup';\n\n\n\nexport default class App extends React.Component {\n  emailInput = null;\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.title}>Formik x React Native</Text>\n        <Formik\n          initialValues={{ name: '', email: '' }}\n          validationSchema={Yup.object({\n            name: Yup.string()\n              .required('Required'),\n            email: Yup.string()\n              .email('Invalid Email')\n              .required('Required'),\n          })}\n          onSubmit={(values, formikActions) => {\n            setTimeout(() => {\n              Alert.alert(JSON.stringify(values));\n              // Important: Make sure to setSubmitting to false so our loading indicator\n              // goes away.\n              formikActions.setSubmitting(false);\n            }, 500);\n          }}>\n          {props => (\n            <View>\n             <TextInput\n                onChangeText={props.handleChange('name')}\n                onBlur={props.handleBlur('name')}\n                value={props.values.name}\n                autoFocus\n                placeholder=\"Your Name\"\n                style={styles.input}\n                onSubmitEditing={() => {\n                  // on certain forms, it is nice to move the user's focus\n                  // to the next input when they press enter.\n                  this.emailInput.focus()\n                }}\n              />\n              {props.touched.name && props.errors.name ? (\n                <Text style={styles.error}>{props.errors.name}</Text>\n              ) : null}\n              <TextInput\n                onChangeText={props.handleChange('email')}\n                onBlur={props.handleBlur('email')}\n                value={props.values.email}\n                placeholder=\"Email Address\"\n                style={styles.input}\n                ref={el => this.emailInput = el}\n              />\n              {props.touched.email && props.errors.email ? (\n                <Text style={styles.error}>{props.errors.email}</Text>\n              ) : null}\n              <Button\n                onPress={props.handleSubmit}\n                color=\"black\"\n                mode=\"contained\"\n                loading={props.isSubmitting}\n                disabled={props.isSubmitting}\n                style={{ marginTop: 16 }}>\n                Submit\n              </Button>\n              <Button\n                onPress={props.handleReset}\n                color=\"black\"\n                mode=\"outlined\"\n                disabled={props.isSubmitting}\n                style={{ marginTop: 16 }}>\n                Reset\n              </Button>\n            </View>\n          )}\n        </Formik>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: Constants.statusBarHeight + 200,\n    backgroundColor: '#ecf0f1',\n    padding: 8,\n  },\n  title: {\n    margin: 24,\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  error: {\n    margin: 8,\n    fontSize: 14,\n    color: 'red',\n    fontWeight: 'bold',\n  },\n  input: {\n    height: 50,\n    paddingHorizontal: 8,\n    width: '100%',\n    borderColor: '#ddd',\n    borderWidth: 1,\n    backgroundColor: '#fff',\n  },\n});\n\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}